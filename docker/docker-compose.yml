version: "3.9"

services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: supply_chain_backend
    restart: always
    env_file:
      - ../.env.example
    depends_on:
      - db
      - kafka
      - mqtt
    ports:
      - "8000:8000"
    volumes:
      - ../app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15
    container_name: supply_chain_db
    restart: always
    environment:
      POSTGRES_USER: supply_admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: supply_chain
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"

  kafka:
    image: bitnami/kafka:3
    container_name: supply_kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3
    container_name: supply_zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  mqtt:
    image: eclipse-mosquitto:2
    container_name: supply_mqtt
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log

volumes:
  pgdata:
  mosquitto_data:
  mosquitto_log:
